services:
  conidea-api:
    image: conidea-api:latest
    build:
      context: .
      dockerfile: apps/conidea-api/Dockerfile
    container_name: conidea-api
    ports:
      - '3000:3000'
    env_file:
      - apps/conidea-api/.env.local
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  ideas-api:
    image: ideas-api:latest
    build:
      context: .
      dockerfile: apps/ideas-api/Dockerfile
    container_name: ideas-api
    ports:
      - '3001:3000'
    env_file:
      - apps/ideas-api/.env.local
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  users-api:
    image: users-api:latest
    build:
      context: .
      dockerfile: apps/users-api/Dockerfile
    container_name: users-api
    ports:
      - '3002:3000'
    env_file:
      - apps/users-api/.env.local
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672' # AMQP protocol port
      - '15672:15672' # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo-data:
